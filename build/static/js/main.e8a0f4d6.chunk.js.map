{"version":3,"sources":["components/Framework.tsx","components/ErrorPage.tsx","components/ImageCard.tsx","components/Homepage.tsx","components/NotFound.tsx","components/RelatedImage.tsx","components/SaveImage.tsx","components/SearchImage.tsx","components/UpdateImage.tsx","routes/RouteIndex.tsx","App.tsx","index.tsx"],"names":["Header","Layout","Content","Sider","Framework","_this","this","react_default","a","createElement","layout","className","style","color","fontSize","width","menu","mode","height","borderRight","Item","key","onClick","p","props","history","push","padding","margin","minHeight","children","React","Component","withRouter","ErrorPage","home","deleteAll","id","match","params","name","pathname","state","filter","result","status","title","subTitle","extra","es_button","type","Meta","Card","ImageCard","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","deleteImage","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","console","log","fetch","body","JSON","stringify","headers","Content-Type","method","then","res","json","data","catch","err","sent","stop","handleDelete","showRelated","filterName","update","imageList","card","size","cover","alt","src","s3Key","actions","description","time","Homepage","componentDidMount","getOriginImages","setState","findImagesByFilterType","response","Error","statusText","abrupt","row","gutter","map","element","index","col","span","components_ImageCard","NotFound","RelatedImage","getRelatedImages","getImagesByOriginImage","findImageByFilteredImage","_callee2","_context2","location","divider","labelCol","wrapperCol","tailLayout","offset","normFile","e","Array","isArray","fileList","SaveImage","changeName","target","value","changeImage","image","file","beforeUpload","message","error","handleSubmit","_ref","formData","preventDefault","FormData","append","dir","get","origin","saveOriginImage","isShow","_x","apply","arguments","onFinish","values","bind","assertThisInitialized","es_form","assign","label","rules","required","input","placeholder","onChange","valuePropName","getValueFromEvent","upload","listType","htmlType","Option","Select","SearchImage","search","es_select","allowClear","length","appRoutes","path","component","UpdateImage","newName","_ref2","filtered","updateImage","getOrigin","_callee3","_context3","getImageByPrimaryKey","UpdateImage_Option","App","react_router_dom","components_Framework","react_router","route","to","from","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e8a0f4d6.chunk.js","sourcesContent":["import { HomeOutlined, SaveOutlined, SearchOutlined } from \"@ant-design/icons\";\nimport { Layout, Menu } from \"antd\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nconst { Header, Content, Sider } = Layout;\n\nclass Framework extends React.Component<any, any> {\n  public render() {\n    return (\n      <Layout>\n        <Header\n          className=\"header\"\n          style={{\n            color: \"white\",\n            fontSize: 24\n          }}\n        >\n          <div className=\"logo\">Welcome to Image Process App!</div>\n        </Header>\n        <Layout>\n          <Sider width={200} className=\"site-layout-background\">\n            <Menu\n              mode=\"inline\"\n              // defaultSelectedKeys={[\"/home\"]}\n              style={{ height: \"100%\", borderRight: 0 }}\n            >\n              <Menu.Item\n                key=\"/home\"\n                onClick={p => this.props.history.push(p.key)}\n              >\n                Home\n              </Menu.Item>\n              <Menu.Item\n                key=\"/save\"\n                onClick={p => this.props.history.push(p.key)}\n              >\n                Save Images\n              </Menu.Item>\n              <Menu.Item\n                key=\"/search\"\n                onClick={p => this.props.history.push(p.key)}\n              >\n                Search Images\n              </Menu.Item>\n            </Menu>\n          </Sider>\n          <Layout style={{ padding: \"0 24px 24px\" }}>\n            <Content\n              className=\"site-layout-background\"\n              style={{\n                padding: 24,\n                // tslint:disable-next-line:object-literal-sort-keys\n                margin: 0,\n                minHeight: 280\n              }}\n            >\n              {this.props.children}\n            </Content>\n          </Layout>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default withRouter(Framework);\n","import { Button, Result } from \"antd\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ErrorPage extends Component<any, any> {\n  public home = () => {\n    this.props.history.push(\"/\");\n  };\n  public deleteAll = () => {\n    const id = this.props.match.params.id;\n    const name = this.props.match.params.name;\n    this.props.history.push({\n      pathname: \"/related/\" + id + \"/\" + name,\n      state: { filter: \"origin\" }\n    });\n  };\n  public render() {\n    return (\n      <div>\n        <Result\n          status=\"warning\"\n          title=\"Sorry, you can't delete origin image only\"\n          subTitle=\"You can delete all related images or cancel delete\"\n          extra={[\n            <Button type=\"primary\" key=\"cancel\" onClick={this.home}>\n              Cancel\n            </Button>,\n            <Button key=\"delete\" onClick={this.deleteAll}>\n              Delete all related\n            </Button>\n          ]}\n        />\n      </div>\n    );\n  }\n}\nexport default withRouter(ErrorPage);\n","import { Button, Card } from \"antd\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nconst { Meta } = Card;\nclass ImageCard extends Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = { imageList: [] };\n  }\n  public deleteImage = async () => {\n    console.log(\"deleteone\");\n    const response = await fetch(\"/api/del\", {\n      body: JSON.stringify({ id: this.props.id, name: this.props.name }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"POST\"\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.props.history.push(\"/\");\n      })\n      .catch(err => console.log(err));\n  };\n  public handleDelete = () => {\n    console.log(4567);\n    const id = this.props.id;\n    const name = this.props.name;\n    this.props.history.push({\n      pathname: \"/error/\" + id + \"/\" + name\n    });\n  };\n  public showRelated = () => {\n    const id = this.props.id;\n    const name = this.props.name;\n    this.props.history.push({\n      pathname: \"/related/\" + id + \"/\" + name,\n      state: { filter: this.props.filterName }\n    });\n  };\n  public update = () => {\n    const id = this.props.id;\n    const name = this.props.name;\n    this.props.history.push({\n      pathname: \"/update/\" + id + \"/\" + name\n    });\n  };\n  public render() {\n    return (\n      <Card\n        size={\"small\"}\n        style={{ width: 300 }}\n        cover={\n          <img\n            alt={this.props.id}\n            src={\n              \"https://images-management.s3-ap-southeast-1.amazonaws.com/\" +\n              this.props.s3Key\n            }\n          />\n        }\n        actions={[\n          <Button type=\"primary\" onClick={this.update}>\n            Update\n          </Button>,\n          <Button\n            type=\"primary\"\n            onClick={\n              this.props.filterName === \"origin\"\n                ? this.handleDelete\n                : this.deleteImage\n            }\n          >\n            Delete\n          </Button>,\n          <Button type=\"primary\" onClick={this.showRelated}>\n            Related\n          </Button>\n        ]}\n      >\n        <Meta\n          title={this.props.name}\n          description={\"UploadTime: \" + this.props.time}\n        />\n      </Card>\n    );\n  }\n}\nexport default withRouter(ImageCard);\n","import { Col, Row } from \"antd\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport ImageCard from \"./ImageCard\";\n\nclass Homepage extends Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      imageList: []\n    };\n  }\n\n  public componentDidMount = () => {\n    this.getOriginImages()\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ imageList: data.findImagesByFilterType });\n        console.log(111);\n        console.log(data);\n      })\n      // tslint:disable-next-line:no-console\n      .catch(err => console.log(err));\n  };\n  public getOriginImages = async () => {\n    const response = await fetch(\"/api/images\");\n    if (response.status !== 200) {\n      throw Error(response.statusText);\n    }\n    return response;\n  };\n  public render() {\n    const { imageList } = this.state;\n    return (\n      <div>\n        <Row gutter={16}>\n          {imageList.map((element: any, index: number) => {\n            return (\n              <Col span={8} key={index}>\n                <ImageCard\n                  name={element.name}\n                  time={element.time}\n                  id={element.id}\n                  s3Key={element.s3Key}\n                  filterName={element.filterName}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Homepage);\n","import React, { Component } from \"react\";\n\nexport default class NotFound extends Component<any, any> {\n  public render() {\n    return <div>404</div>;\n  }\n}\n","import { Button, Col, Divider, Row } from \"antd\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport ImageCard from \"./ImageCard\";\n\nclass RelatedImage extends Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      imageList: [],\n      id: this.props.match.params.id,\n      filterName: this.props.location.state.filter\n    };\n  }\n  public componentDidMount = () => {\n    console.log(987);\n    this.getRelatedImages()\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        if (this.state.filterName === \"origin\") {\n          this.setState({ imageList: data.getImagesByOriginImage });\n        } else {\n          this.setState({\n            imageList: [data.findImageByFilteredImage]\n          });\n        }\n        console.log(this.state.imageList);\n        console.log(134);\n      })\n      .catch(err => console.log(err));\n  };\n  public getRelatedImages = async () => {\n    const response = await fetch(\"/api/related\", {\n      body: JSON.stringify({\n        id: this.state.id,\n        filterName: this.state.filterName\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"POST\"\n    });\n    if (response.status !== 200) {\n      throw Error(response.statusText);\n    }\n    console.log(234);\n    console.log(response);\n    return response;\n  };\n  public deleteAll = async () => {\n    const response = await fetch(\"/api/delete\", {\n      body: JSON.stringify({ id: this.state.id }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"POST\"\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.props.history.push(\"/home\");\n      })\n      .catch(err => console.log(err));\n  };\n  public render() {\n    const { imageList } = this.state;\n    return (\n      <div>\n        <Button type=\"primary\" onClick={this.deleteAll}>\n          Delete all related images\n        </Button>\n        <Divider />\n        <Row gutter={16}>\n          {imageList.map((element: any, index: number) => {\n            return (\n              <Col span={8} key={index}>\n                <ImageCard\n                  name={element.name}\n                  time={element.time}\n                  id={element.id}\n                  s3Key={element.s3Key}\n                  filterName={element.filterName}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(RelatedImage);\n","import {\n  Button,\n  Card,\n  Col,\n  Divider,\n  Form,\n  Input,\n  message,\n  Row,\n  Upload\n} from \"antd\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport ImageCard from \"./ImageCard\";\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 8 }\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 }\n};\nconst normFile = (e: any) => {\n  console.log(\"Upload event:\", e);\n  if (Array.isArray(e)) {\n    return e;\n  }\n  return e && e.fileList;\n};\n\nclass SaveImage extends Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = { name: \"\", isShow: false, origin: {}, image: {} };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  public changeName = (e: any) => {\n    this.setState({ name: e.target.value });\n  };\n  public changeImage = (e: any) => {\n    this.setState({ image: e.file });\n  };\n  public beforeUpload = (file: any) => {\n    const isLegal =\n      file.type === \"image/jpeg\" ||\n      file.type === \"image/png\" ||\n      file.type === \"image/jpg\" ||\n      file.type === \"image/bmp\";\n    if (!isLegal) {\n      message.error(\"You can only upload JPG/PNG file!\");\n    }\n    const isLt200M = file.size / 1024 / 1024 < 200;\n    if (!isLt200M) {\n      message.error(\"Image must smaller than 200MB!\");\n    }\n    // return isLegal && isLt200M;\n    return false;\n  };\n  public handleSubmit = async (e: any) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"name\", this.state.name);\n    formData.append(\"image\", this.state.image);\n    console.dir(formData);\n    console.log(formData.get(\"name\"));\n    console.log(formData.get(\"image\"));\n    await fetch(\"/api/save\", {\n      body: formData,\n      method: \"POST\"\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ origin: data.saveOriginImage });\n        this.setState({ isShow: true });\n      })\n      .catch(error => console.error(\"Error:\", error));\n  };\n  public onFinish = (values: any) => {\n    console.log(\"Received values of form: \", values);\n  };\n  public render() {\n    return (\n      <div>\n        <Card title=\"save an origin image\">\n          <Form {...layout} onFinish={this.onFinish} name=\"saveImage\">\n            <Form.Item\n              label=\"name\"\n              name=\"name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input the name of your image!\"\n                }\n              ]}\n            >\n              <Input\n                placeholder=\"Please input the name of your image!\"\n                onChange={this.changeName}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"upload\"\n              label=\"image\"\n              valuePropName=\"fileList\"\n              getValueFromEvent={normFile}\n              rules={[\n                {\n                  required: true,\n                  message: \"Please upload your image!\"\n                }\n              ]}\n            >\n              <Upload\n                name=\"logo\"\n                listType=\"picture\"\n                onChange={this.changeImage}\n                beforeUpload={this.beforeUpload}\n              >\n                <Button>+ Click to upload image</Button>\n              </Upload>\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                onClick={this.handleSubmit}\n              >\n                Save\n              </Button>\n            </Form.Item>\n          </Form>\n        </Card>\n        {this.state.isShow ? (\n          <div>\n            <Divider />\n            <Row gutter={16}>\n              <Col span={8}>\n                <ImageCard\n                  name={this.state.origin.name}\n                  time={this.state.origin.time}\n                  id={this.state.origin.id}\n                  s3Key={this.state.origin.s3Key}\n                  filterName={this.state.origin.filterName}\n                />\n              </Col>\n            </Row>\n          </div>\n        ) : (\n          <div>waiting for save...</div>\n        )}\n      </div>\n    );\n  }\n}\nexport default withRouter(SaveImage);\n","import { Button, Card, Col, Form, Row, Select } from \"antd\";\nimport React, { Component } from \"react\";\nimport ImageCard from \"./ImageCard\";\n\nconst { Option } = Select;\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 8 }\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 }\n};\n\nexport default class SearchImage extends Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      filterName: \"\",\n      imageList: []\n    };\n  }\n  public changeName = (value: string) => {\n    this.setState({ filterName: value });\n  };\n  public search = async (e: any) => {\n    e.preventDefault();\n    const response = await fetch(\"/api/filterType\", {\n      body: JSON.stringify({ filterName: this.state.filterName }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"POST\"\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ imageList: data.findImagesByFilterType });\n        console.log(data);\n      })\n      .catch(err => console.log(err));\n  };\n  public render() {\n    const { imageList } = this.state;\n    return (\n      <div>\n        <Card>\n          <Form {...layout} name=\"control-hooks\">\n            <Form.Item\n              name=\"filterName\"\n              label=\"Filter Type\"\n              rules={[{ required: true }]}\n            >\n              <Select\n                placeholder=\"Select a filter\"\n                allowClear={true}\n                onChange={this.changeName}\n              >\n                <Option value=\"Grayscale\">Grayscale</Option>\n                <Option value=\"MyGray\">MyGray</Option>\n                <Option value=\"BlackWhite\">BlackWhite</Option>\n                <Option value=\"Film\">Film</Option>\n              </Select>\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n              <Button type=\"primary\" htmlType=\"submit\" onClick={this.search}>\n                Search\n              </Button>\n            </Form.Item>\n          </Form>\n        </Card>\n        {imageList.length > 0 ? (\n          <div>\n            <h1>search result of {this.state.filterName} as following:</h1>\n            <Row gutter={16}>\n              {imageList.map((element: any, index: number) => {\n                return (\n                  <Col span={8} key={index}>\n                    <ImageCard\n                      name={element.name}\n                      time={element.time}\n                      id={element.id}\n                      s3Key={element.s3Key}\n                      filterName={element.filterName}\n                    />\n                  </Col>\n                );\n              })}\n            </Row>\n          </div>\n        ) : this.state.filterName.length > 0 ? (\n          <h1>search result of {this.state.filterName} as following:</h1>\n        ) : (\n          <h1>search result will be here</h1>\n        )}\n      </div>\n    );\n  }\n}\n","import { Button, Card, Col, Divider, Form, Input, Row, Select } from \"antd\";\nimport React, { Component } from \"react\";\nimport ImageCard from \"./ImageCard\";\n\nconst { Option } = Select;\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 8 }\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 }\n};\nexport default class UpdateImage extends Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      name: this.props.match.params.name,\n      filterName: \"\",\n      newName: \"\",\n      origin: {},\n      filtered: {},\n      isShow: false\n    };\n  }\n  public newName = (e: any) => {\n    this.setState({ newName: e.target.value });\n  };\n  public filter = (value: string) => {\n    this.setState({ filterName: value });\n  };\n  public update = async () => {\n    const response = await fetch(\"/api/update\", {\n      body: JSON.stringify({\n        filterName: this.state.filterName,\n        newName: this.state.newName,\n        id: this.state.id,\n        name: this.state.name\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"POST\"\n    })\n      .then(res => res.json())\n      .then(async data => {\n        console.log(data);\n        this.setState({ filtered: data.updateImage });\n        await this.getOrigin();\n      })\n      .catch(err => console.log(err));\n  };\n  public getOrigin = async () => {\n    const response = await fetch(\"/api/origin\", {\n      body: JSON.stringify({\n        id: this.state.id,\n        name: this.state.name\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"POST\"\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ origin: data.getImageByPrimaryKey });\n        this.setState({ isShow: true });\n      })\n      .catch(err => console.log(err));\n  };\n  public render() {\n    return (\n      <div>\n        <Card>\n          <Form {...layout} name=\"control-hooks\">\n            <Form.Item\n              name=\"filterName\"\n              label=\"Filter Type\"\n              rules={[{ required: true }]}\n            >\n              <Select\n                placeholder=\"Select a filter\"\n                allowClear={true}\n                onChange={this.filter}\n              >\n                <Option value=\"Grayscale\">Grayscale</Option>\n                <Option value=\"MyGray\">MyGray</Option>\n                <Option value=\"BlackWhite\">BlackWhite</Option>\n                <Option value=\"Film\">Film</Option>\n              </Select>\n            </Form.Item>\n            <Form.Item\n              label=\"name\"\n              name=\"name\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input the name of your image!\"\n                }\n              ]}\n            >\n              <Input\n                placeholder=\"Please input the name of your image!\"\n                onChange={this.newName}\n              />\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n              <Button type=\"primary\" htmlType=\"submit\" onClick={this.update}>\n                Update\n              </Button>\n            </Form.Item>\n          </Form>\n        </Card>\n        {this.state.isShow ? (\n          <div>\n            <Divider />\n            <Row gutter={16}>\n              <Col span={8}>\n                <ImageCard\n                  name={this.state.origin.name}\n                  time={this.state.origin.time}\n                  id={this.state.origin.id}\n                  s3Key={this.state.origin.s3Key}\n                  filterName={this.state.origin.filterName}\n                />\n              </Col>\n              <Col span={8}>\n                <ImageCard\n                  name={this.state.filtered.name}\n                  time={this.state.filtered.time}\n                  id={this.state.filtered.id}\n                  s3Key={this.state.filtered.s3Key}\n                  filterName={this.state.filtered.filterName}\n                />\n              </Col>\n            </Row>\n          </div>\n        ) : (\n          <div>waiting for update...</div>\n        )}\n      </div>\n    );\n  }\n}\n","import ErrorPage from \"../components/ErrorPage\";\nimport Homepage from \"../components/Homepage\";\nimport NotFound from \"../components/NotFound\";\nimport RelatedImage from \"../components/RelatedImage\";\nimport SaveImage from \"../components/SaveImage\";\nimport SearchImage from \"../components/SearchImage\";\nimport UpdateImage from \"../components/UpdateImage\";\n\nexport const appRoutes = [\n  {\n    path: \"/home\",\n    // tslint:disable-next-line:object-literal-sort-keys\n    component: Homepage\n  },\n  {\n    path: \"/save\",\n    // tslint:disable-next-line:object-literal-sort-keys\n    component: SaveImage\n  },\n  {\n    path: \"/404\",\n    // tslint:disable-next-line:object-literal-sort-keys\n    component: NotFound\n  },\n  {\n    path: \"/search\",\n    // tslint:disable-next-line:object-literal-sort-keys\n    component: SearchImage\n  },\n  {\n    path: \"/error/:id/:name\",\n    // tslint:disable-next-line:object-literal-sort-keys\n    component: ErrorPage\n  },\n  {\n    path: \"/update/:id/:name\",\n    // tslint:disable-next-line:object-literal-sort-keys\n    component: UpdateImage\n  },\n  {\n    path: \"/related/:id/:name\",\n    // tslint:disable-next-line:object-literal-sort-keys\n    component: RelatedImage\n  }\n];\n","import React, { Component } from \"react\";\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport Framework from \"./components/Framework\";\nimport { appRoutes } from \"./routes/RouteIndex\";\n\nclass App extends Component<any, any> {\n  public render() {\n    return (\n      <Router>\n        <Framework>\n          <Switch>\n            {appRoutes.map(route => {\n              return (\n                <Route\n                  key={route.path}\n                  path={route.path}\n                  component={route.component}\n                />\n              );\n            })}\n            <Redirect to=\"/home\" from=\"/\" />\n            <Redirect to=\"/404\" />\n          </Switch>\n        </Framework>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// import \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}